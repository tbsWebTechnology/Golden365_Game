<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Created Bonus Record</title>
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
  <link rel="stylesheet" href="/dist/css/adminlte.min.css">
  <link rel="stylesheet" href="/css/admin.css">
</head>

<body class="hold-transition sidebar-mini">
  <div class="wrapper">
    <!-- Include navigation -->
    <%- include('nav') %>
      <div class="content-wrapper">
        <section class="content-header">
          <div class="container-fluid">
            <div class="row mb-2">
              <div class="col-sm-6">
                <h1>Created Bonus Record</h1>
              </div>
            </div>
          </div>
        </section>

        <!-- Main content -->
        <section class="content">
          <div class="card">
            <div class="card-body">
              <form id="bonusForm" method="POST">
                <div class="mb-3">
                  <label for="phoneNumber" class="form-label">Phone Number</label>
                  <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" required>
                </div>

                <div class="mb-3">
                  <label for="amount" class="form-label">Amount</label>
                  <input type="number" class="form-control" id="amount" name="amount" required>
                </div>

                <div class="mb-3">
                  <label for="type" class="form-label">Type</label>
                  <select class="form-control" id="type" name="type" required>
                    <option value="" selected disabled>Select Type</option>
                    <option value="REFUND AMOUNT">REFUND AMOUNT</option>
                    <option value="WELCOME BONUS">WELCOME BONUS</option>
                    <option value="INVITATION BONUS">INVITATION BONUS</option>
                    <option value="FIRST RECHARGE BONUS">FIRST RECHARGE BONUS</option>
                    <option value="DAILY RECHARGE BONUS">DAILY RECHARGE BONUS</option>
                    <option value="FIRST RECHARGE AGENT BONUS">FIRST RECHARGE AGENT BONUS</option>
                    <option value="DAILY RECHARGE AGENT BONUS">DAILY RECHARGE AGENT BONUS</option>
                    <option value="DAILY RECHARGE AGENT BONUS">Festival Bonus</option>
                    
                    
                  </select>
                </div>

                <button type="submit" class="btn btn-primary" id="submit">Submit</button>
              </form>
            </div>
          </div>

          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Bonus Records Table</h5>


              <div class="row mb-3">
                <div class="col-sm-4">
                  <input type="text" id="filterPhone" class="form-control" placeholder="Filter by Phone">
                </div>
                <div class="col-sm-4">
                  <select id="filterType" class="form-control">
                    <option value="">Filter by Type</option>
                    <option value="REFUND AMOUNT">REFUND AMOUNT</option>
                    <option value="WELCOME BONUS">WELCOME BONUS</option>
                    <option value="INVITATION BONUS">INVITATION BONUS</option>
                    <option value="FIRST RECHARGE BONUS">FIRST RECHARGE BONUS</option>
                    <option value="DAILY RECHARGE BONUS">DAILY RECHARGE BONUS</option>
                    <option value="FIRST RECHARGE AGENT BONUS">FIRST RECHARGE AGENT BONUS</option>
                    <option value="DAILY RECHARGE AGENT BONUS">DAILY RECHARGE AGENT BONUS</option>
                    <option value="DAILY RECHARGE AGENT BONUS">Festival Bonus</option>
                  </select>
                </div>
                <div class="col-sm-4">
                  <input type="date" id="filterTime" class="form-control" placeholder="Filter by Time">
                </div>
              </div>




              <table class="table" id="tableget">
                <thead>
                  <tr>
                    <!-- <th>#</th> -->
                    <th class="text-center">Phone</th>
                    <th class="text-center">Amount</th>
                    <th class="text-center">Type</th>
                    <th class="text-center">Time</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Add your table rows dynamically here -->
                </tbody>
              </table>


              <nav>
                <ul class="pagination justify-content-center" id="pagination">
                  <!-- Pagination buttons will be dynamically generated here -->
                </ul>
              </nav>


            </div>
          </div>
        </section>
      </div>
  </div>

  <!-- Include scripts -->
  <script src="/plugins/jquery/jquery.min.js"></script>
  <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="/dist/js/adminlte.min.js"></script>
  <script src="/js/admin/admin.js"></script>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
  <script>
    $(document).ready(function () {
  const rowsPerPage = 30; // Number of rows to show per page
  let currentPage = 1;
  let filteredData = [];

  function formateT(params) {
    let result = params < 10 ? "0" + params : params;
    return result;
  }
  
  function timerJoin(params = "", addHours = 0) {
    let date = params ? new Date(Number(params)) : new Date();
    date.setHours(date.getHours() + addHours);

    let years = formateT(date.getFullYear());
    let months = formateT(date.getMonth() + 1);
    let days = formateT(date.getDate());
    let hours = date.getHours() % 12 || 12;
    let ampm = date.getHours() < 12 ? "AM" : "PM";
    let minutes = formateT(date.getMinutes());
    let seconds = formateT(date.getSeconds());

    return `${years}-${months}-${days} ${hours}:${minutes}:${seconds} ${ampm}`;
  }

  $("#bonusForm").on("click", "#submit", function (e) {
    e.preventDefault();

    let phoneNumber = $("#phoneNumber").val().trim();
    let amount = $("#amount").val().trim();
    let type = $("#type").val().trim();

    $.ajax({
      type: "POST",
      url: "/api/webapi/admin/CreatedBonus",
      dataType: "JSON",
      data: { phone: phoneNumber, amount: amount, type: type },
      success: function (response) {
        console.log('Response data success:', response.message);
        Swal.fire('UPDATED SUCCESSFULLY', 'success');
        document.getElementById('bonusForm').reset();
        fetchAndUpdateTable(); // Fetch the updated table
      },
      error: function (error) {
        console.log('Response data error:', JSON.stringify(error));
        Swal.fire({ title: "Something went wrong!" });
      }
    });
  });

  // Function to fetch and update the table data
  function fetchAndUpdateTable() {
    $.ajax({
      type: "GET",
      url: "/api/webapi/admin/getBonus",
      dataType: "json",
      success: function (response) {
        filteredData = response.rows; // Update the filteredData with the full dataset
        applyFilters(); // Apply filters to populate the table initially
      },
      error: function (xhr, status, error) {
        console.log('Error fetching data:', error);
      }
    });
  }

  // Function to update the table with paginated data
  function updateTable(page) {
    let tableBody = $('#tableget').find('tbody');
    tableBody.empty();

    let startIndex = (page - 1) * rowsPerPage;
    let endIndex = Math.min(startIndex + rowsPerPage, filteredData.length);

    for (let i = startIndex; i < endIndex; i++) {
      let item = filteredData[i];
      let row = `<tr>
        <td class="text-center">${item.phone}</td>
        <td class="text-center">${item.amount}</td>
        <td class="text-center">${item.type}</td>
        <td class="text-center">${timerJoin(item.time)}</td>
      </tr>`;
      tableBody.append(row);
    }

    renderPagination(page);
  }

  // Apply filters to the table and paginate the results
  function applyFilters() {
    let filterPhone = $('#filterPhone').val().trim().toLowerCase();
    let filterType = $('#filterType').val();
    let filterTime = $('#filterTime').val();

    filteredData = filteredData.filter(function (item) {
      let phoneMatch = filterPhone === "" || item.phone.toLowerCase().includes(filterPhone);
      let typeMatch = filterType === "" || item.type === filterType;
      let timeMatch = filterTime === "" || timerJoin(item.time).split(" ")[0] === filterTime;

      return phoneMatch && typeMatch && timeMatch;
    });

    currentPage = 1; // Reset to page 1 after filtering
    updateTable(currentPage);
  }

  // Function to render pagination controls
  function renderPagination(current) {
    let totalPages = Math.ceil(filteredData.length / rowsPerPage);
    let pagination = $('#pagination');
    pagination.empty();

    for (let i = 1; i <= totalPages; i++) {
      let activeClass = i === current ? 'active' : '';
      let button = `<li class="page-item ${activeClass}">
                      <a class="page-link" href="#">${i}</a>
                    </li>`;
      pagination.append(button);
    }

    // Add event listeners for pagination links
    pagination.find('.page-link').on('click', function (e) {
      e.preventDefault();
      currentPage = parseInt($(this).text());
      updateTable(currentPage);
    });
  }

  // Event listeners for filters
  $('#filterPhone, #filterType, #filterTime').on('input change', function () {
    applyFilters();
  });

  // Initial load of table data
  fetchAndUpdateTable();
});

  </script>
</body>

</html>