<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Manage Notifications</title>
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/dist/css/adminlte.min.css">
    <link rel="stylesheet" href="/css/admin.css">
    <link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"
        integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer">
        </script>
    <style>
        .form-group {
            margin-top: 20px;
            padding-left: 30px;
            padding-right: 30px;
            padding-top: 40px;
            padding-bottom: 40px;
            border-radius: 15px;
            background: #dedede;
            box-shadow: 0 0 5px #b8b8b8;
        }

        .form-group button {
            margin-top: 30px;
        }

        .text-center{
            background: lightslategrey;
    border-radius: 15px 15px 0px 0px;
    height: 50px;
    color: white;
    text-transform: uppercase;
    padding: 10px;
        }

        @media only screen and (min-width: 600px) {
            .myNotice{
                display: block;
                justify-content: space-between;
}
.myNotice .form-control {
            text-align: center;
        }

      

}
.form-control {
    display: block;
    width: 100% !important;
    justify-self: center;
}


.drag-drop-area {
    border: 2px dashed #007bff;
    border-radius: 8px;
    padding: 20px;
    width: 90%;
    justify-self: center;
    margin-top: 30px;
    text-align: center;
    transition: background-color 0.3s ease;
    cursor: pointer;
}

.drag-drop-area p {
    margin: 0;
    color: #007bff;
    font-weight: bold;
}

.drag-drop-area.drag-over {
    background-color: rgba(0, 123, 255, 0.1);
}



.preview-container {
    margin-top: 15px;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.preview-container img {
    max-width: 100px;
    max-height: 100px;
    border: 1px solid #ccc;
    border-radius: 4px;
    object-fit: cover;
}
.mt-5, .my-5 {
    margin-top: 0.0rem !important;
}

    </style>
</head>

<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        <%- include('nav') %>
            <div class="content-wrapper">
                <section class="content-header">
                    <div class="container-fluid">
                        <div class="row mb-2">
                            <div class="col-sm-6">
                                <h1>Manage Notifications</h1>
                            </div>
                        </div>
                    </div>
                    <!-- /.container-fluid -->
                </section>

                <div class="container-fluid">
                    <div class="row">
                        
                        <div class="container mt-5">
                            
                            <form id="notificationForm" enctype="multipart/form-data">
                                <div class="form-group">
                                    <h4>Add New Notification</h4>
                                  <label for="heading">Title of Notification:</label>
                                  <input type="text" class="form-control" id="heading" name="heading" required></br>
                                  <label for="image">Upload Notification Image:</label>
                                  <input type="file" class="form-control" id="image" name="image" accept="image/*"></br>
                                  <label for="content">Notification Details / Content:</label>
                                  <textarea class="form-control" id="content" name="content" rows="4" required></textarea></br>
                                  
                                  <label for="link">Link For Redirection:</label>
                                  <input type="text" class="form-control" id="link" name="link"></br>
                                  <label for="time">Date & Time (Notification To Show):</label>
                                  <input type="datetime-local" class="form-control" id="time" name="time" required></br>
                                  <button type="submit" class="btn btn-primary mt-3">Submit</button>
                                </div>
                                
                               
                              </form>
                              
                              
                            <br>
                            <h3>Notification List</h3>
                            <div id="notificationList"></div>


<!-- Modal for editing notification -->
<div class="modal" id="editNotificationModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Notification</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editNotificationForm" enctype="multipart/form-data">
            <input type="hidden" id="edit-id">
            <div class="mb-3">
              <label for="edit-heading" class="form-label">Title of Notification:</label>
              <input type="text" class="form-control" id="edit-heading" required>
            </div>
            <div class="mb-3">
              <label for="edit-image" class="form-label">Upload Notification Image:</label>
              <input type="file" class="form-control" id="edit-image" accept="image/*">
              <img id="existing-image-preview" src="" alt="Current Image" style="max-width: 100px; margin-top: 10px;">
            </div>
            <div class="mb-3">
              <label for="edit-content" class="form-label">Notification Details / Content:</label>
              <textarea class="form-control" id="edit-content" rows="4" required></textarea>
            </div>
            <div class="mb-3">
              <label for="edit-link" class="form-label">Link For Redirection:</label>
              <input type="text" class="form-control" id="edit-link">
            </div>
            <div class="mb-3">
              <label for="edit-time" class="form-label">Date & Time (Notification To Show):</label>
              <input type="datetime-local" class="form-control" id="edit-time" required>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </form>
          
      </div>
    </div>
  </div>
</div>

                        </div>
                         


                    </div>
                </div>
            </div>
    </div>
    <script src="/plugins/jquery/jquery.min.js"></script>
    <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/dist/js/adminlte.min.js"></script>
    <script src="/js/admin/admin.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>



    



    
    <script>
        document.getElementById('notificationForm').addEventListener('submit', function (e) {
  e.preventDefault();
  const formData = new FormData(this);

  fetch('/admin/add-notification', {
    method: 'POST',
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    alert(data.message);
    console.log('Uploaded Image URL:', data.imageUrl);
    
    // Auto-refresh the page after success
    if (data.message === "Notification added successfully!") {
      setTimeout(() => {
        location.reload(); // Refresh the page after a delay of 1 second (optional)
      }, 1000); // 1-second delay to show the alert before refresh
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Failed to add notification. Please try again.');
  });
});

    
        // Fetch and display notifications with edit and delete options
  function fetchNotifications() {
    fetch('/admin/get-notifications')
      .then(response => response.json())
      .then(data => {
        const container = document.getElementById('notificationList');
        container.innerHTML = data.map(notification => `
  <div class="card mt-3">
    <div class="card-body">
      <h5>${notification.heading}</h5>
      <img src="${notification.image}" style="max-width: 100px;" alt="Notification Image">
      <p>${notification.content}</p>
      <b>Link: </b><a href="${notification.link}" target="_blank" style="padding-left: 0px !important;">${notification.link || 'No Link'}</a></br>
      <b>Date & Time: </b><small>${new Date(notification.time).toLocaleDateString('en-GB')}, ${new Date(notification.time).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true })}</small>
      </br></br>
      <button class="btn btn-warning btn-sm mt-2" onclick="editNotification(${notification.id})">Edit Notification</button>&nbsp;&nbsp;
              <button class="btn btn-danger btn-sm mt-2" onclick="deleteNotification(${notification.id})">Delete Notification</button>
    </div>
  </div>
`).join('');
      })
      .catch(error => console.error('Error fetching notifications:', error));
  }

  // Handle delete notification
  function deleteNotification(id) {
    if (confirm('Are you sure you want to delete this notification?')) {
      fetch(`/admin/delete-notification/${id}`, {
        method: 'DELETE',
      })
        .then(response => response.json())
        .then(data => {
          alert(data.message);
          fetchNotifications(); // Refresh list after deletion
        })
        .catch(error => console.error('Error deleting notification:', error));
    }
  }

  // Handle edit notification
  function editNotification(id) {
  fetch(`/admin/get-notifications`)
    .then(response => response.json())
    .then(notifications => {
      const notification = notifications.find(n => n.id === id);
      if (notification) {
        document.getElementById('edit-id').value = notification.id;
        document.getElementById('edit-heading').value = notification.heading;
        document.getElementById('edit-content').value = notification.content;
        document.getElementById('edit-link').value = notification.link;
        document.getElementById('edit-time').value = new Date(notification.time).toISOString().slice(0, 16);

        // Set existing image preview
        const existingImagePreview = document.getElementById('existing-image-preview');
        existingImagePreview.src = notification.image;
        existingImagePreview.style.display = notification.image ? 'block' : 'none'; // Show only if image exists

        new bootstrap.Modal(document.getElementById('editNotificationModal')).show(); // Show modal
      }
    })
    .catch(error => console.error('Error fetching notification for edit:', error));
}

document.getElementById('editNotificationForm').addEventListener('submit', function (e) {
  e.preventDefault();

  const formData = new FormData(this);
  const id = document.getElementById('edit-id').value;

  formData.append('id', id);
  formData.append('heading', document.getElementById('edit-heading').value);
  formData.append('content', document.getElementById('edit-content').value);
  formData.append('link', document.getElementById('edit-link').value);
  formData.append('time', document.getElementById('edit-time').value);

  const imageFile = document.getElementById('edit-image').files[0];
  if (imageFile) {
    formData.append('image', imageFile); // Append new image if uploaded
  }

  fetch(`/admin/update-notification`, {
    method: 'PUT',
    body: formData
  })
    .then(response => response.json())
    .then(data => {
      alert(data.message);
      if (data.status) location.reload(); // Refresh the page if update is successful
    })
    .catch(error => console.error('Error updating notification:', error));
});


  // Initial fetch
  fetchNotifications();
    </script>
    



    
    



</body>

</html>